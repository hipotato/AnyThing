<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.potato</groupId>
	<artifactId>AnyThing</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>AnyThing</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!--!这里版本不能使用properties配置-->
		<version>1.5.6.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Springboot 热部署 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<!--spring boot 集成Mybatis核心依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- druid阿里的数据库连接池，目前最好的java数据库连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.26</version>
		</dependency>
		<!-- 注解缓存 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<!-- 一个性能超高的java序列化反序列库 -->
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
			<version>4.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--Phoenix -->

		<dependency>
			<groupId>org.apache.phoenix</groupId>
			<artifactId>phoenix-core</artifactId>
			<version>4.9.0-HBase-1.2</version>
		</dependency>

		<!-- jdbc 依赖 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.40</version>
		</dependency>
		<dependency>
			<groupId>com.itfsw</groupId>
			<artifactId>mybatis-generator-plugin</artifactId>
			<version>1.0.19</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<!-- 默认激活开发环境 -->
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- spring boot 打包时需要排除 tomcat 并修改 mainClass -->
				<spring.boot.profiles.active>dev</spring.boot.profiles.active>
				<spring.boot.tomcat.scope>compile</spring.boot.tomcat.scope>
				<spring.boot.mainClass>org.potato.AnyThing.AnyThingApplication</spring.boot.mainClass>
			</properties>
		</profile>
		<profile>
			<!-- 使用时相关命令后加上 -Pprod -->
			<id>prod</id>
			<properties>
				<!-- spring boot 打包时需要排除 tomcat 并修改 mainClass -->
				<spring.boot.profiles.active>prod</spring.boot.profiles.active>
				<spring.boot.tomcat.scope>provided</spring.boot.tomcat.scope>
				<spring.boot.mainClass>com.iwhere.wt.ServletApplication</spring.boot.mainClass>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/java</directory>
				<filtering>true</filtering>
				<!-- 包含的文件!默认src/main/java 下只会编译java文件，会导致除java的其他如xml或者 properties文件可能某些情况不打包的情况发生 -->
				<includes>
					<!-- mybatis xml -->
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<!-- 启动资源替换，用profile信息替换配置文件信息 -->
				<filtering>true</filtering>
				<!-- 排除文件 -->
				<excludes>
					<exclude>excludes/**</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- mybatis-generator 自动代码插件 -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.5</version>
				<configuration>
					<!-- 配置文件 -->
					<configurationFile>src/main/resources/mybatis-generator.xml</configurationFile>
					<!-- 允许移动和修改 -->
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
				<dependencies>
					<!-- jdbc 依赖 -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.40</version>
					</dependency>
					<dependency>
						<groupId>com.itfsw</groupId>
						<artifactId>mybatis-generator-plugin</artifactId>
						<version>1.0.19</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<!-- 配置java版本 不配置的话默认父类配置的是1.6-->
		<pluginManagement>
			<plugins>
				<!-- 由于历史原因 maven-compiler只支持编译Java 1.3 所以要自己手动配置其支持1.5 不然跑test的时候不能使用@Test 注解！！ -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<!-- jdbc 依赖 -->

			</plugins>

		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://maven.aliyun.com/nexus/content/repositories/central</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/content/repositories/releases/</url>
		</repository>
	</repositories>


	<distributionManagement>
		<repository>
			<id>nexus</id>
			<url>http://qa.iwhere.com:8109/repository/maven-snapshots</url>
		</repository>
	</distributionManagement>
</project>
