<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.potato.AnyThing.phoenix.dao.manual.PoiphPhoenixMapper">
  <resultMap id="BaseResultMap" type="org.potato.AnyThing.phoenix.dao.generator.model.Poiph">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="geoNum" jdbcType="BIGINT" property="geonum" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="otherid" jdbcType="VARCHAR" property="otherid" />
    <result column="starting" jdbcType="VARCHAR" property="starting" />
    <result column="typecode" jdbcType="VARCHAR" property="typecode" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    "geoNum", "name", "otherid", "starting", "typecode", "type"
  </sql>
  <select id="getPois" parameterType="org.potato.AnyThing.phoenix.dto.req.GetPoiSqlReq" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    /*+ INDEX("poiPh" "poiph_geoNum_typecode_idx") */
    <include refid="Base_Column_List" />
    from "poiPh" where ("geoNum" between ${geoNumMin} and ${geoNumMax}
    <if test="types != null and types.size!=0">
      and "typecode" in
      <foreach item="type" index="index" collection="types"
               open="(" separator="," close=")">
        #{type}
      </foreach>
    </if>
    )  limit ${limit} offset ${offset}
  </select>
</mapper>